{"version":3,"sources":["components/Searchbar.js","components/ImgsList/ImageGalleryItem.js","components/ImgsList/ImageGallery.js","components/LoadMoreButton.js","errorImages/cat.jpg","components/Loader.js","errorImages/cats.jpg","components/Error.js","components/services/FetchImgs.js","components/Modal.js","components/App.js","index.js"],"names":["Searchbar","state","imgName","handleChange","e","setState","currentTarget","value","toLowerCase","trim","handleSubmit","preventDefault","props","onSubmit","alert","className","this","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","alt","width","src","largeurl","ImageGallery","entriesImgs","openModal","map","id","tags","onClick","LoadMoreBtn","LoaderForImg","defaultImg","Error","message","role","errorImage","height","api","FetchImgs","page","BASE_URL","fetch","then","response","ok","json","Promise","reject","modalRoot","document","querySelector","Modal","handleKeyDownESC","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","defaultProps","PropTypes","func","isRequired","App","error","status","showModal","largeURL","handleFormSubmit","toggleModalWindow","fetchImgNext","pageIncrement","imgAPI","hits","console","log","prevState","prevProps","prevName","nextName","data","catch","scrollTo","top","documentElement","scrollHeight","behavior","color","timeout","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fece3bf.chunk.js","sourcesContent":["// import { toast } from \"react-toastify\";\nimport React, { Component } from \"react\";\nclass Searchbar extends Component {\n  state = {\n    imgName: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({ imgName: e.currentTarget.value.toLowerCase().trim() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // const { imgName } = this.state;\n    if (this.state.imgName.trim() === \"\") {\n      alert(\"Please, type what do you want to see.\");\n      // toast(\"Please, type what do you want to see.\");\n      return;\n    }\n    this.props.onSubmit(this.state.imgName); // отпарвка данных\n\n    this.setState({ imgName: \"\" }); // очищение формы\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            value={this.state.imgName}\n            name=\"imgName\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\n//\nfunction ImageGalleryItem({ webformatURL, largeImageURL, alt }) {\n  // console.log(alt)\n  return (\n    // <div>\n    <img\n      width=\"240\"\n      src={webformatURL}\n      alt={alt}\n      largeurl={largeImageURL}\n      className=\"ImageGalleryItem-image\"\n    />\n    // {/* </div> */}\n  );\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n// import FetchImgs from \"./services/FetchImgs\";\n\nfunction ImageGallery({ entriesImgs, openModal }) {\n  return (\n    <>\n      <ul>\n        <li className=\"ImageGalleryItem\">\n          {entriesImgs.map(({ id, webformatURL, largeImageURL, tags }) => {\n            return (\n              <ImageGalleryItem\n                key={id}\n                id={id}\n                webformatURL={webformatURL}\n                alt={tags}\n                onClick={openModal}\n                largeImageURL={largeImageURL}\n              />\n            );\n          })}\n        </li>\n      </ul>\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  entriesImgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    })\n  ),\n  openModal: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\n\nfunction LoadMoreBtn({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default LoadMoreBtn;\n","export default __webpack_public_path__ + \"static/media/cat.910a77a7.jpg\";","import ImageGalleryItem from \"./ImgsList/ImageGalleryItem\";\nimport defaultImg from \"../errorImages/cat.jpg\";\n\n//\nexport default function LoaderForImg() {\n  const webformatURL = defaultImg;\n  return (\n    <div>\n      <ImageGalleryItem webformatURL={webformatURL} />\n      <p>Loading...</p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cats.35d3b417.jpg\";","import PropTypes from \"prop-types\";\nimport errorImage from \"../errorImages/cats.jpg\";\n\n//\nexport default function Error({ message }) {\n  return (\n    <>\n      {/* <div>{message}</div> */}\n      <div role=\"alert\">\n        <img src={errorImage} width=\"240\" height=\"240\" alt=\"cats\" />\n        <p>{message}</p>\n      </div>\n    </>\n  );\n}\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","function FetchImgs(name, page) {\n  const KEY = \"22980128-788f7e90de699cd9b75eacbcd\";\n  const BASE_URL = `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return fetch(BASE_URL).then((response) => {\n    if (response.ok) {\n      // console.log(response);\n      return response.json();\n    }\n    return Promise.reject(new Error(`\"${name}\" isn't correctly, try again`));\n  });\n}\nconst api = {\n  FetchImgs,\n};\nexport default api;\n\n// fetch(BASE_URL)\n//   .then((res) => res.json())\n// .then(({ hits }) => {\n//   hits.map(({ id, webformatURL, largeImageURL }) => {\n//     // console.log(\"id:\", id, \"webU:\", webformatURL,\"large\", largeImageURL );\n//     return {\n//       ...id,\n//       ...webformatURL,\n//       ...largeImageURL,\n//     };\n//   });\n// });\n\n// .then(({ hits }) => {\n//   hits.map(({ id, webformatURL, largeImageURL }) => {\n//     console.log(\"id:\", id, \"webU:\", webformatURL, \"large\", largeImageURL);\n//     return {\n//       entriesImgs: [id, webformatURL, largeImageURL],\n//     };\n//   });\n// })\n\n// .then(({ hits }) => {\n//   this.setState({ entriesImgs: hits, status: \"resolved\" });\n// })\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  static defaultProps = {\n    onClose: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  handleKeyDownESC = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImgsList/ImageGallery\";\nimport LoadMoreBtn from \"./LoadMoreButton\";\nimport LoaderForImg from \"./Loader\";\nimport Error from \"./Error.js\";\nimport imgAPI from \"./services/FetchImgs\";\nimport Modal from \"./Modal\";\nimport \"./styles/Style.scss\";\n\nclass App extends Component {\n  state = {\n    imgName: \"\",\n    entriesImgs: null,\n    page: 1,\n    error: null,\n    status: \"idle\",\n    showModal: false,\n    largeURL: \"\",\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.imgName;\n    const nextName = this.state.imgName;\n    const { page } = this.state;\n    //\n    if (prevName !== nextName) {\n      this.setState({ status: \"pending\" });\n\n      imgAPI\n        .FetchImgs(nextName, page)\n        .then((entriesImgs) => {\n          const data = entriesImgs.hits.map(\n            ({ id, tags, webformatURL, largeImageURL }) => {\n              return {\n                id: id,\n                webformatURL: webformatURL,\n                tags: tags,\n                largeImageURL: largeImageURL,\n              };\n            }\n          );\n          this.setState({ entriesImgs: data, status: \"resolved\" });\n        })\n        .catch((error) => this.setState({ error, status: \"reject\" }));\n    }\n    //\n    if (prevProps.page !== page && page !== 1) {\n      this.fetchImgNext(nextName, page);\n    }\n    if (prevProps.page && !prevProps.showModal) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n  // getImgs = (imgName, pageNumber) => {\n  //   FetchImgs(imgName, pageNumber)\n  //     .then(({ hits }) => {\n  //       this.setState({ entriesImgs: hits, status: \"resolved\" });\n  //     })\n  //     .catch(() => {\n  //       if (!imgName) {\n  //         this.setState({\n  //           error: \"Something went wrong, please. try again\",\n  //           status: \"rejected\",\n  //         });\n  //       }\n  //     });\n  // };\n\n  handleFormSubmit = (imgName) => {\n    this.setState({ imgName, page: 1 });\n  };\n\n  toggleModalWindow = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      // largeURL: url,\n    }));\n  };\n  fetchImgNext = (imgName, pageIncrement) => {\n    imgAPI.FetchImgs(imgName, pageIncrement).then(({ hits }) => {\n      console.log(hits);\n      // console.log(this.pageIncrement);\n      this.setState((prevState) => ({\n        entriesImgs: [...prevState.entriesImgs, ...hits],\n      }));\n    });\n  };\n  pageIncrement = ({ page }) => {\n    this.setState({\n      page: page + 1,\n    });\n  };\n\n  render() {\n    const { entriesImgs, error, status, showModal, largeURL } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        {status === \"resolved\" && (\n          <>\n            <ImageGallery\n              entriesImgs={entriesImgs}\n              openModal={this.toggleModalWindow}\n            />\n            {status === \"idle\" && (\n              <p className=\"header\">Please, type the image name</p>\n            )}\n\n            {status === \" rejected\" && (\n              <Error\n                message={error.message}\n                // `Some went wrong`\n              />\n            )}\n            {status === \"pending\" && <LoaderForImg />}\n            <LoadMoreBtn onClick={this.fetchImgNext}>\n              <Loader\n                type=\"Rings\"\n                color=\"#00BFFF\"\n                height={80}\n                width={80}\n                timeout={3000}\n              />\n            </LoadMoreBtn>\n          </>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModalWindow}>\n            <img src={largeURL} alt=\"\" />\n          </Modal>\n        )}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n// if (response.total === 0) {\n//   return console.log(`The picture ${nextName} isn't exist`);\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./components/App.js\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}