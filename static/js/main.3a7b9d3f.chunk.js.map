{"version":3,"sources":["components/SeacrhBar/Searchbar.js","components/ImgsList/ImageGalleryItem.js","components/ImgsList/ImageGallery.js","components/LoadMoreBtn/LoadMoreBtn.js","components/Loader/Loader.js","components/Error/Error.js","components/services/FetchImgs.js","components/Modal/Modal.js","components/Container/Container.js","components/App.js","index.js"],"names":["Searchbar","state","imgName","handleChange","e","setState","currentTarget","value","toLowerCase","trim","handleSubmit","preventDefault","props","onSubmit","alert","className","this","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","alt","width","src","ImageGallery","entriesImgs","openModal","onClick","target","dataset","source","map","id","tags","LoadMoreBtn","SpinLoader","color","height","timeout","style","position","top","left","Error","message","FetchImgs","page","fetch","then","response","json","catch","error","Promise","reject","modalRoot","document","querySelector","Modal","handleKeyDownESC","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","img","createPortal","defaultProps","PropTypes","func","isRequired","Container","children","App","total","status","showModal","forLoadMore","getImgFromFetch","pageNumber","hits","length","data","prevState","scroll","scrollTo","documentElement","scrollHeight","behavior","pageIncrement","handleFormSubmit","toggleModalWindow","prop","prevProps","prevName","nextName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a7b9d3f.chunk.js","sourcesContent":["// import { toast } from \"react-toastify\";\nimport React, { Component } from \"react\";\nclass Searchbar extends Component {\n  state = {\n    imgName: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({ imgName: e.currentTarget.value.toLowerCase().trim() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.imgName.trim() === \"\") {\n      alert(\"Please, type what do you want to see.\");\n      // toast.error(\"Please, type what do you want to see.\");\n      return;\n    }\n    this.props.onSubmit(this.state.imgName); // отпарвка данных\n\n    this.setState({ imgName: \"\" }); // очищение формы\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            value={this.state.imgName}\n            name=\"imgName\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\n//\nfunction ImageGalleryItem({ webformatURL, largeImageURL, alt }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        width=\"240\"\n        src={webformatURL}\n        alt={alt}\n        data-source={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n// import FetchImgs from \"./services/FetchImgs\";\n\nfunction ImageGallery({ entriesImgs, openModal }) {\n  return (\n    <div>\n      <ul\n        className=\"ImageGallery\"\n        onClick={(e) => openModal(e.target.dataset.source)}\n      >\n        {entriesImgs.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <ImageGalleryItem\n              key={id}\n              id={id}\n              webformatURL={webformatURL}\n              alt={tags}\n              largeImageURL={largeImageURL}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  entriesImgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    })\n  ),\n  openModal: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\n\nfunction LoadMoreBtn({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className=\"Button\">\n      Load more\n    </button>\n  );\n}\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default LoadMoreBtn;\n","// import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass SpinLoader extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"BallTriangle\"\n        color=\"#85309f\"\n        height={100}\n        width={100}\n        timeout={3000}\n        style={{\n          position: \"fixed\",\n          top: \"40%\",\n          left: \"50%\",\n        }}\n        // className=\"loader\"\n      />\n    );\n  }\n}\nexport default SpinLoader;\n","import PropTypes from \"prop-types\";\n// import errorImage from \"../images/cats.jpg\";\n\n//\nexport default function Error({ message }) {\n  return (\n    <>\n      <div>\n        {/* <img src={errorImage} width=\"240\" height=\"240\" alt=\"cats\" /> */}\n        <p className=\"error-message\">{message}</p>\n      </div>\n    </>\n  );\n}\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","const KEY = \"22980128-788f7e90de699cd9b75eacbcd\";\n// const BASE_URL = `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\nfunction FetchImgs(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  )\n    .then((response) => response.json())\n    .catch((error) => Promise.reject(error));\n}\n\nexport default FetchImgs;\n\n///\n// function FetchImgs(name, page) {\n//   return fetch(\n//     `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//   ).then((response) => {\n//     if (response.ok) {\n//       // console.log(response);\n//       response.json();\n//     }\n//     return Promise.reject(new Error(`\"${name}\" isn't correctly, try again`));\n//   });\n// }\n\n// const api = {\n//   FetchImgs,\n// };\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  static defaultProps = {\n    onClose: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  handleKeyDownESC = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    const { img } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={img} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React, { Component } from \"react\";\n// import { ToastContainer } from \"react-toastify\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Searchbar from \"./SeacrhBar/Searchbar\";\nimport ImageGallery from \"./ImgsList/ImageGallery\";\nimport LoadMoreBtn from \"./LoadMoreBtn/LoadMoreBtn\";\nimport SpinLoader from \"./Loader/Loader\";\nimport Error from \"./Error/Error.js\";\nimport FetchImgs from \"./services/FetchImgs\";\nimport Modal from \"./Modal/Modal\";\nimport Container from \"./Container/Container\";\nimport \"./styles/Style.scss\";\n\n//\nclass App extends Component {\n  state = {\n    total: [],\n    imgName: \"\",\n    entriesImgs: [],\n    page: 1,\n    error: \"\",\n    status: \"idle\",\n    showModal: false,\n    largeImageURL: \"\",\n    forLoadMore: false,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.imgName;\n    const nextName = this.state.imgName;\n    const { page } = this.state;\n    //\n    if (prevName !== nextName) {\n      this.setState({ entriesImgs: [], page: 1, status: \"pending\" });\n\n      this.getImgFromFetch(nextName, page);\n    }\n    if (prevState.page !== page && page !== 1) {\n      this.getImgFromFetch(nextName, page);\n    }\n  }\n\n  getImgFromFetch = (imgName, pageNumber) => {\n    FetchImgs(imgName, pageNumber)\n      .then((entriesImgs) => {\n        if (!entriesImgs.hits.length) {\n          alert(\"No such pictures, try again\");\n          this.setState({\n            error: \"Something went wrong, please try again\",\n            status: \"rejected\",\n          });\n        } else {\n          const data = entriesImgs.hits.map(\n            ({ id, tags, webformatURL, largeImageURL }) => {\n              return {\n                id,\n                webformatURL,\n                tags,\n                largeImageURL,\n              };\n            }\n          );\n          this.setState((prevState) => ({\n            entriesImgs: [...prevState.entriesImgs, ...data],\n            status: \"resolved\",\n            forLoadMore: true,\n          }));\n        }\n\n        this.scroll();\n      })\n      .catch((error) =>\n        this.setState({\n          error,\n          status: \"rejected\",\n        })\n      );\n  };\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  pageIncrement = () => {\n    return this.setState({\n      page: this.state.page + 1,\n      status: \"pending\",\n    });\n  };\n  handleFormSubmit = (imgName) => {\n    this.setState({ imgName, page: 1 });\n  };\n\n  toggleModalWindow = (prop) => {\n    return this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImageURL: prop,\n    }));\n  };\n\n  render() {\n    const {\n      entriesImgs,\n      error,\n      status,\n      showModal,\n      largeImageURL,\n      forLoadMore,\n    } = this.state;\n    return (\n      <Container className=\"container\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {status === \"idle\" && (\n          <p className=\"header\">Please, type the image name</p>\n        )}\n        {status === \"pending\" && (\n          <>\n            <ImageGallery\n              entriesImgs={entriesImgs}\n              openModal={this.toggleModalWindow}\n            />\n            <SpinLoader />\n          </>\n        )}\n\n        {status === \" rejected\" && <Error message={error} />}\n        {status === \"resolved\" && (\n          <>\n            <ImageGallery\n              entriesImgs={entriesImgs}\n              openModal={this.toggleModalWindow}\n            />\n            {forLoadMore && <LoadMoreBtn onClick={this.pageIncrement} />}\n          </>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModalWindow} img={largeImageURL} />\n        )}\n        {/* <ToastContainer autoClose={3000} /> */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n// getImgFromFetchOnBtn = (imgName, page) => {\n//   imgAPI\n//     .FetchImgs(imgName, page)\n//     .then(({ hits }) => {\n//       const data = this.getData(hits);\n//       this.setState((prev) => ({\n//         entriesImgs: [...prev.entriesImgs, ...data],\n//         status: \"resolved\",\n//       }));\n//       this.scroll();\n//     })\n//     .catch((error) => this.setState({ error, status: \"reject\" }));\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.js\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}