{"version":3,"sources":["components/SeacrhBar/Searchbar.js","components/ImgsList/ImageGalleryItem.js","components/ImgsList/ImageGallery.js","components/LoadMoreBtn/LoadMoreBtn.js","components/Loader/Loader.js","components/images/cats.jpg","components/Error/Error.js","components/services/FetchImgs.js","components/Modal/Modal.js","components/Container/Container.js","components/App.js","index.js"],"names":["Searchbar","state","imgName","handleChange","e","setState","currentTarget","value","toLowerCase","trim","handleSubmit","preventDefault","props","onSubmit","alert","className","this","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","alt","width","src","ImageGallery","entriesImgs","openModal","onClick","target","dataset","source","map","id","tags","LoadMoreBtn","Loader","color","height","timeout","style","position","top","left","Error","message","role","errorImage","api","FetchImgs","page","BASE_URL","fetch","then","response","ok","json","Promise","reject","modalRoot","document","querySelector","Modal","handleKeyDownESC","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","children","defaultProps","PropTypes","func","isRequired","Container","App","error","status","showModal","getData","data","getImgFromFetch","pageNumber","imgAPI","hits","length","catch","getImgFromFetchOnBtn","prev","scroll","scrollTo","documentElement","scrollHeight","behavior","pageIncrement","handleFormSubmit","toggleModalWindow","prop","prevProps","prevState","prevName","nextName","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f1fed6d.chunk.js","sourcesContent":["// import { toast } from \"react-toastify\";\nimport React, { Component } from \"react\";\nclass Searchbar extends Component {\n  state = {\n    imgName: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({ imgName: e.currentTarget.value.toLowerCase().trim() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.imgName.trim() === \"\") {\n      alert(\"Please, type what do you want to see.\");\n      // toast(\"Please, type what do you want to see.\");\n      return;\n    }\n    this.props.onSubmit(this.state.imgName); // отпарвка данных\n\n    this.setState({ imgName: \"\" }); // очищение формы\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            value={this.state.imgName}\n            name=\"imgName\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\n//\nfunction ImageGalleryItem({ webformatURL, largeImageURL, alt }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        width=\"240\"\n        src={webformatURL}\n        alt={alt}\n        data-source={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n// import FetchImgs from \"./services/FetchImgs\";\n\nfunction ImageGallery({ entriesImgs, openModal }) {\n  return (\n    <div>\n      <ul\n        className=\"ImageGallery\"\n        onClick={(e) => openModal(e.target.dataset.source)}\n      >\n        {entriesImgs.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <ImageGalleryItem\n              key={id}\n              id={id}\n              webformatURL={webformatURL}\n              alt={tags}\n              largeImageURL={largeImageURL}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  entriesImgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    })\n  ),\n  openModal: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\n\nfunction LoadMoreBtn({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className=\"Button\">\n      Load more\n    </button>\n  );\n}\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default LoadMoreBtn;\n","// import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ReactLoaderSpinner from \"react-loader-spinner\";\n//\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <ReactLoaderSpinner\n        type=\"Rings\"\n        color=\"#85309f\"\n        height={80}\n        width={80}\n        timeout={3000} //3 secs\n        style={{\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"47%\",\n        }}\n      />\n    );\n  }\n}\n// LoaderBeforeCards.propTypes = {\n//   webformatURL: PropTypes.string.isRequired,\n// };\n","export default __webpack_public_path__ + \"static/media/cats.35d3b417.jpg\";","import PropTypes from \"prop-types\";\nimport errorImage from \"../images/cats.jpg\";\n\n//\nexport default function Error({ message }) {\n  return (\n    <>\n      <div role=\"alert\">\n        <img src={errorImage} width=\"240\" height=\"240\" alt=\"cats\" />\n        <p>{message}</p>\n      </div>\n    </>\n  );\n}\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","function FetchImgs(name, page) {\n  const KEY = \"22980128-788f7e90de699cd9b75eacbcd\";\n  const BASE_URL = `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return fetch(BASE_URL).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`\"${name}\" isn't correctly, try again`));\n  });\n}\nconst api = {\n  FetchImgs,\n};\nexport default api;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  static defaultProps = {\n    onClose: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDownESC);\n  }\n  handleKeyDownESC = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React, { Component } from \"react\";\n// import { ToastContainer } from \"react-toastify\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Searchbar from \"./SeacrhBar/Searchbar\";\nimport ImageGallery from \"./ImgsList/ImageGallery\";\nimport LoadMoreBtn from \"./LoadMoreBtn/LoadMoreBtn\";\nimport Loader from \"./Loader/Loader\";\nimport Error from \"./Error/Error.js\";\nimport imgAPI from \"./services/FetchImgs\";\nimport Modal from \"./Modal/Modal\";\nimport Container from \"./Container/Container\";\nimport \"./styles/Style.scss\";\n\n//\nclass App extends Component {\n  state = {\n    imgName: \"\",\n    entriesImgs: null,\n    page: 1,\n    error: null,\n    status: \"idle\",\n    showModal: false,\n    largeImageURL: \"\",\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.imgName;\n    const nextName = this.state.imgName;\n    const { page, showModal, largeImageURL } = this.state;\n    //\n    if (prevName !== nextName) {\n      this.setState({ status: \"pending\" });\n\n      this.getImgFromFetch(nextName, page);\n    }\n    if (prevState.page !== page && page !== 1) {\n      this.setState({ status: \"pending\" });\n      this.getImgFromFetchOnBtn(nextName, page);\n    }\n    if (showModal) {\n      console.log(largeImageURL, \"large\");\n    }\n  }\n  getData = (data) => {\n    return data.map(({ id, tags, webformatURL, largeImageURL }) => {\n      return {\n        id: id,\n        webformatURL: webformatURL,\n        tags: tags,\n        largeImageURL: largeImageURL,\n      };\n    });\n  };\n\n  getImgFromFetch = (imgName, pageNumber) => {\n    imgAPI\n      .FetchImgs(imgName, pageNumber)\n      .then(({ hits }) => {\n        const data = this.getData(hits);\n        this.setState({ entriesImgs: data, status: \"resolved\" });\n\n        if (!hits.length) {\n          alert(\"No such pictures, try again\");\n          this.setState({\n            error: \"Something went wrong, please. try again\",\n            status: \"rejected\",\n          });\n        } else this.setState({ error: null });\n      })\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n  getImgFromFetchOnBtn = (imgName, page) => {\n    imgAPI\n      .FetchImgs(imgName, page)\n      .then(({ hits }) => {\n        const data = this.getData(hits);\n        this.setState((prev) => ({\n          entriesImgs: [...prev.entriesImgs, ...data],\n          status: \"resolved\",\n        }));\n        this.scroll();\n      })\n      .catch((error) => this.setState({ error, status: \"reject\" }));\n  };\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  pageIncrement = () => {\n    return this.setState({\n      page: this.state.page + 1,\n    });\n  };\n  handleFormSubmit = (imgName) => {\n    this.setState({ imgName, page: 1 });\n  };\n\n  toggleModalWindow = (prop) => {\n    // console.dir(prop);\n    // console.log(prop, \"log\");\n    return this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImageURL: prop,\n    }));\n  };\n\n  render() {\n    const { entriesImgs, error, status, showModal, largeImageURL } = this.state;\n    return (\n      <Container className=\"container\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {status === \"idle\" && (\n          <p className=\"header\">Please, type the image name</p>\n        )}\n\n        {status === \"resolved\" && (\n          <>\n            <ImageGallery\n              entriesImgs={entriesImgs}\n              openModal={this.toggleModalWindow}\n            />\n            {status === \" rejected\" && <Error message={error.message} />}\n            {status === \"pending\" && <Loader />}\n            <LoadMoreBtn onClick={this.pageIncrement}></LoadMoreBtn>\n          </>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModalWindow}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n        {/* <ToastContainer autoClose={3000} /> */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.js\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}